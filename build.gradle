buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}

	// 自定义  Hibernate 的版本
	ext['hibernate.version'] = '5.2.8.Final'

	repositories {
//		mavenCentral() 使用阿里的仓库
		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.yuan'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

// 打包的类型为 jar，并指定了生成的打包的文件名称和版本
jar {
	baseName = 'elasticsearch'
	version = '1.0.0'
}


dependencies {
	// devtools 用于调试阶段热部署的
	compile("org.springframework.boot:spring-boot-devtools")

	compile('org.springframework.boot:spring-boot-starter-web')

	// 添加 MySQL连接驱动 的依赖 运行时的 不配置DataSource 启动会报错
	compile('mysql:mysql-connector-java:8.0.11')

	// 添加 Thymeleaf 的依赖
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	// 添加 Spring Data JPA 的依赖
	compile('org.springframework.boot:spring-boot-starter-data-jpa')

	// 添加  Apache Commons Lang 依赖
	compile('org.apache.commons:commons-lang3:3.5')

	// 添加  Spring Security 依赖
	compile('org.springframework.boot:spring-boot-starter-security')

	// 添加  Thymeleaf Spring Security 依赖
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4:3.0.2.RELEASE')

	// 添加  Spring Data Elasticsearch 的依赖
	compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')

	// 添加  JNA 的依赖
	compile('net.java.dev.jna:jna:4.3.0')

	runtime('com.h2database:h2:1.4.193')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}
// 添加完依赖后可以去根目录下运行下面的，
// .\gradlew bootRun // 检查是否有冲突